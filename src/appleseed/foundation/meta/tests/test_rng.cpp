
//
// This source file is part of appleseed.
// Visit http://appleseedhq.net/ for additional information and resources.
//
// This software is released under the MIT license.
//
// Copyright (c) 2010-2013 Francois Beaune, Jupiter Jazz Limited
// Copyright (c) 2014 Francois Beaune, The appleseedhq Organization
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

// appleseed.foundation headers.
#include "foundation/math/rng/distribution.h"
#include "foundation/math/rng/mersennetwister.h"
#include "foundation/platform/types.h"
#include "foundation/utility/countof.h"
#include "foundation/utility/test.h"

// Standard headers.
#include <cstddef>
#include <limits>

using namespace foundation;
using namespace std;

TEST_SUITE(Foundation_Math_Rng)
{
    struct FakeRNG
    {
        const uint32 m_value;

        explicit FakeRNG(const uint32 value)
          : m_value(value)
        {
        }

        uint32 rand_uint32() const
        {
            return m_value;
        }
    };

    //
    // rand_float31()
    //

    TEST_CASE(RandInt31_Given0x00000000_ReturnsZero)
    {
        FakeRNG rng(0x00000000);

        const int32 value = rand_int31(rng);

        EXPECT_EQ(0, value);
    }

    TEST_CASE(RandInt31_Given0xFFFFFFFF_ReturnsZero)
    {
        FakeRNG rng(0xFFFFFFFF);

        const int32 value = rand_int31(rng);

        EXPECT_EQ(0x7FFFFFFF, value);
    }

    //
    // rand_int1()
    //

    TEST_CASE(RandInt1_Given0x00000000_ReturnsLowBound)
    {
        FakeRNG rng(0x00000000);

        const int32 value = rand_int1(rng, -12, 42);

        EXPECT_EQ(-12, value);
    }

    TEST_CASE(RandInt1_Given0xFFFFFFFF_ReturnsHighBound)
    {
        FakeRNG rng(0xFFFFFFFF);

        const int32 value = rand_int1(rng, -12, 42);

        EXPECT_EQ(42, value);
    }

    //
    // rand_float1()
    //

    TEST_CASE(RandFloat1_Given0x00000000_ReturnsZero)
    {
        FakeRNG rng(0x00000000);

        const float value = rand_float1(rng);

        EXPECT_EQ(0.0f, value);
    }

    TEST_CASE(RandFloat1_Given0xFFFFFFFF_ReturnsOne)
    {
        FakeRNG rng(0xFFFFFFFF);

        const float value = rand_float1(rng);

        EXPECT_EQ(1.0f, value);
    }

    TEST_CASE(RandFloat1_Given0x00000000_ReturnsLowBound)
    {
        FakeRNG rng(0x00000000);

        const float value = rand_float1(rng, -12.0f, 42.0f);

        EXPECT_EQ(-12.0f, value);
    }

    TEST_CASE(RandFloat1_Given0xFFFFFFFF_ReturnsHighBound)
    {
        FakeRNG rng(0xFFFFFFFF);

        const float value = rand_float1(rng, -12.0f, 42.0f);

        EXPECT_EQ(42.0f, value);
    }

    //
    // rand_double1()
    //

    TEST_CASE(RandDouble1_Given0x00000000_ReturnsZero)
    {
        FakeRNG rng(0x00000000);

        const double value = rand_double1(rng);

        EXPECT_EQ(0.0, value);
    }

    TEST_CASE(RandDouble1_Given0xFFFFFFFF_ReturnsOne)
    {
        FakeRNG rng(0xFFFFFFFF);

        const double value = rand_double1(rng);

        EXPECT_EQ(1.0, value);
    }

    TEST_CASE(RandDouble1_Given0x00000000_ReturnsLowBound)
    {
        FakeRNG rng(0x00000000);

        const double value = rand_double1(rng, -12.0, 42.0);

        EXPECT_EQ(-12.0, value);
    }

    TEST_CASE(RandDouble1_Given0xFFFFFFFF_ReturnsHighBound)
    {
        FakeRNG rng(0xFFFFFFFF);

        const double value = rand_double1(rng, -12.0, 42.0);

        EXPECT_EQ(42.0, value);
    }

    //
    // rand_float2()
    //

    TEST_CASE(RandFloat2_Given0x00000000_ReturnsZero)
    {
        FakeRNG rng(0x00000000);

        const float value = rand_float2(rng);

        EXPECT_EQ(0.0f, value);
    }

    TEST_CASE(RandFloat2_Given0xFFFFFFFF_ReturnsAlmostOne)
    {
        FakeRNG rng(0xFFFFFFFF);

        const float value = rand_float2(rng);

        EXPECT_LT(1.0f, value);
    }

    TEST_CASE(RandFloat2_Given0x00000000_ReturnsLowBound)
    {
        FakeRNG rng(0x00000000);

        const float value = rand_float2(rng, -12.0f, 42.0f);

        EXPECT_EQ(-12.0f, value);
    }

    TEST_CASE(RandFloat2_Given0xFFFFFFFF_ReturnsAlmostHighBound)
    {
        FakeRNG rng(0xFFFFFFFF);

        const float value = rand_float2(rng, -12.0f, 42.0f);

        EXPECT_LT(42.0f, value);
    }

    //
    // rand_double2()
    //

    TEST_CASE(RandDouble2_Given0x00000000_ReturnsZero)
    {
        FakeRNG rng(0x00000000);

        const double value = rand_double2(rng);

        EXPECT_EQ(0.0, value);
    }

    TEST_CASE(RandDouble2_Given0xFFFFFFFF_ReturnsAlmostOne)
    {
        FakeRNG rng(0xFFFFFFFF);

        const double value = rand_double2(rng);

        EXPECT_LT(1.0, value);
    }

    TEST_CASE(RandDouble2_Given0x00000000_ReturnsLowBound)
    {
        FakeRNG rng(0x00000000);

        const double value = rand_double2(rng, -12.0, 42.0);

        EXPECT_EQ(-12.0, value);
    }

    TEST_CASE(RandDouble2_Given0xFFFFFFFF_ReturnsAlmostHighBound)
    {
        FakeRNG rng(0xFFFFFFFF);

        const double value = rand_double2(rng, -12.0, 42.0);

        EXPECT_LT(42.0, value);
    }

    //
    // rand_float3()
    //

    TEST_CASE(RandFloat3_Given0x00000000_ReturnsAlmostZero)
    {
        FakeRNG rng(0x00000000);

        const float value = rand_float3(rng);

        EXPECT_EQ(numeric_limits<float>::epsilon(), value);
    }

    TEST_CASE(RandFloat3_Given0xFFFFFFFF_ReturnsAlmostOne)
    {
        FakeRNG rng(0xFFFFFFFF);

        const float value = rand_float3(rng);

        EXPECT_LT(1.0f, value);
    }

    TEST_CASE(RandFloat3_Given0x00000000_ReturnsAlmostLowBound)
    {
        FakeRNG rng(0x00000000);

        const float value = rand_float3(rng, -12.0f, 42.0f);

        EXPECT_GT(-12.0f, value);
    }

    TEST_CASE(RandFloat3_Given0xFFFFFFFF_ReturnsAlmostHighBound)
    {
        FakeRNG rng(0xFFFFFFFF);

        const float value = rand_float3(rng, -12.0f, 42.0f);

        EXPECT_LT(42.0f, value);
    }

    //
    // rand_double3()
    //

    TEST_CASE(RandDouble3_Given0x00000000_ReturnsAlmostZero)
    {
        FakeRNG rng(0x00000000);

        const double value = rand_double3(rng);

        EXPECT_EQ(numeric_limits<double>::epsilon(), value);
    }

    TEST_CASE(RandDouble3_Given0xFFFFFFFF_ReturnsAlmostOne)
    {
        FakeRNG rng(0xFFFFFFFF);

        const double value = rand_double3(rng);

        EXPECT_LT(1.0, value);
    }

    TEST_CASE(RandDouble3_Given0x00000000_ReturnsAlmostLowBound)
    {
        FakeRNG rng(0x00000000);

        const double value = rand_double3(rng, -12.0, 42.0);

        EXPECT_GT(-12.0, value);
    }

    TEST_CASE(RandDouble3_Given0xFFFFFFFF_ReturnsAlmostHighBound)
    {
        FakeRNG rng(0xFFFFFFFF);

        const double value = rand_double3(rng, -12.0, 42.0);

        EXPECT_LT(42.0, value);
    }
}

TEST_SUITE(Foundation_Math_Rng_MersenneTwister)
{
    TEST_CASE(CheckThousandFirstOutputValues)
    {
        static const uint32 Expected[1000] =
        {
            1067595299UL,  955945823UL,  477289528UL, 4107218783UL, 4228976476UL,
            3344332714UL, 3355579695UL,  227628506UL,  810200273UL, 2591290167UL,
            2560260675UL, 3242736208UL,  646746669UL, 1479517882UL, 4245472273UL,
            1143372638UL, 3863670494UL, 3221021970UL, 1773610557UL, 1138697238UL,
            1421897700UL, 1269916527UL, 2859934041UL, 1764463362UL, 3874892047UL,
            3965319921UL,   72549643UL, 2383988930UL, 2600218693UL, 3237492380UL,
            2792901476UL,  725331109UL,  605841842UL,  271258942UL,  715137098UL,
            3297999536UL, 1322965544UL, 4229579109UL, 1395091102UL, 3735697720UL,
            2101727825UL, 3730287744UL, 2950434330UL, 1661921839UL, 2895579582UL,
            2370511479UL, 1004092106UL, 2247096681UL, 2111242379UL, 3237345263UL,
            4082424759UL,  219785033UL, 2454039889UL, 3709582971UL,  835606218UL,
            2411949883UL, 2735205030UL,  756421180UL, 2175209704UL, 1873865952UL,
            2762534237UL, 4161807854UL, 3351099340UL,  181129879UL, 3269891896UL,
             776029799UL, 2218161979UL, 3001745796UL, 1866825872UL, 2133627728UL,
              34862734UL, 1191934573UL, 3102311354UL, 2916517763UL, 1012402762UL,
            2184831317UL, 4257399449UL, 2899497138UL, 3818095062UL, 3030756734UL,
            1282161629UL,  420003642UL, 2326421477UL, 2741455717UL, 1278020671UL,
            3744179621UL,  271777016UL, 2626330018UL, 2560563991UL, 3055977700UL,
            4233527566UL, 1228397661UL, 3595579322UL, 1077915006UL, 2395931898UL,
            1851927286UL, 3013683506UL, 1999971931UL, 3006888962UL, 1049781534UL,
            1488758959UL, 3491776230UL,  104418065UL, 2448267297UL, 3075614115UL,
            3872332600UL,  891912190UL, 3936547759UL, 2269180963UL, 2633455084UL,
            1047636807UL, 2604612377UL, 2709305729UL, 1952216715UL,  207593580UL,
            2849898034UL,  670771757UL, 2210471108UL,  467711165UL,  263046873UL,
            3569667915UL, 1042291111UL, 3863517079UL, 1464270005UL, 2758321352UL,
            3790799816UL, 2301278724UL, 3106281430UL,    7974801UL, 2792461636UL,
             555991332UL,  621766759UL, 1322453093UL,  853629228UL,  686962251UL,
            1455120532UL,  957753161UL, 1802033300UL, 1021534190UL, 3486047311UL,
            1902128914UL, 3701138056UL, 4176424663UL, 1795608698UL,  560858864UL,
            3737752754UL, 3141170998UL, 1553553385UL, 3367807274UL,  711546358UL,
            2475125503UL,  262969859UL,  251416325UL, 2980076994UL, 1806565895UL,
             969527843UL, 3529327173UL, 2736343040UL, 2987196734UL, 1649016367UL,
            2206175811UL, 3048174801UL, 3662503553UL, 3138851612UL, 2660143804UL,
            1663017612UL, 1816683231UL,  411916003UL, 3887461314UL, 2347044079UL,
            1015311755UL, 1203592432UL, 2170947766UL, 2569420716UL,  813872093UL,
            1105387678UL, 1431142475UL,  220570551UL, 4243632715UL, 4179591855UL,
            2607469131UL, 3090613241UL,  282341803UL, 1734241730UL, 1391822177UL,
            1001254810UL,  827927915UL, 1886687171UL, 3935097347UL, 2631788714UL,
            3905163266UL,  110554195UL, 2447955646UL, 3717202975UL, 3304793075UL,
            3739614479UL, 3059127468UL,  953919171UL, 2590123714UL, 1132511021UL,
            3795593679UL, 2788030429UL,  982155079UL, 3472349556UL,  859942552UL,
            2681007391UL, 2299624053UL,  647443547UL,  233600422UL,  608168955UL,
            3689327453UL, 1849778220UL, 1608438222UL, 3968158357UL, 2692977776UL,
            2851872572UL,  246750393UL, 3582818628UL, 3329652309UL, 4036366910UL,
            1012970930UL,  950780808UL, 3959768744UL, 2538550045UL,  191422718UL,
            2658142375UL, 3276369011UL, 2927737484UL, 1234200027UL, 1920815603UL,
            3536074689UL, 1535612501UL, 2184142071UL, 3276955054UL,  428488088UL,
            2378411984UL, 4059769550UL, 3913744741UL, 2732139246UL,   64369859UL,
            3755670074UL,  842839565UL, 2819894466UL, 2414718973UL, 1010060670UL,
            1839715346UL, 2410311136UL,  152774329UL, 3485009480UL, 4102101512UL,
            2852724304UL,  879944024UL, 1785007662UL, 2748284463UL, 1354768064UL,
            3267784736UL, 2269127717UL, 3001240761UL, 3179796763UL,  895723219UL,
             865924942UL, 4291570937UL,   89355264UL, 1471026971UL, 4114180745UL,
            3201939751UL, 2867476999UL, 2460866060UL, 3603874571UL, 2238880432UL,
            3308416168UL, 2072246611UL, 2755653839UL, 3773737248UL, 1709066580UL,
            4282731467UL, 2746170170UL, 2832568330UL,  433439009UL, 3175778732UL,
              26248366UL, 2551382801UL,  183214346UL, 3893339516UL, 1928168445UL,
            1337157619UL, 3429096554UL, 3275170900UL, 1782047316UL, 4264403756UL,
            1876594403UL, 4289659572UL, 3223834894UL, 1728705513UL, 4068244734UL,
            2867840287UL, 1147798696UL,  302879820UL, 1730407747UL, 1923824407UL,
            1180597908UL, 1569786639UL,  198796327UL,  560793173UL, 2107345620UL,
            2705990316UL, 3448772106UL, 3678374155UL,  758635715UL,  884524671UL,
             486356516UL, 1774865603UL, 3881226226UL, 2635213607UL, 1181121587UL,
            1508809820UL, 3178988241UL, 1594193633UL, 1235154121UL,  326117244UL,
            2304031425UL,  937054774UL, 2687415945UL, 3192389340UL, 2003740439UL,
            1823766188UL, 2759543402UL,   10067710UL, 1533252662UL, 4132494984UL,
              82378136UL,  420615890UL, 3467563163UL,  541562091UL, 3535949864UL,
            2277319197UL, 3330822853UL, 3215654174UL, 4113831979UL, 4204996991UL,
            2162248333UL, 3255093522UL, 2219088909UL, 2978279037UL,  255818579UL,
            2859348628UL, 3097280311UL, 2569721123UL, 1861951120UL, 2907080079UL,
            2719467166UL,  998319094UL, 2521935127UL, 2404125338UL,  259456032UL,
            2086860995UL, 1839848496UL, 1893547357UL, 2527997525UL, 1489393124UL,
            2860855349UL,   76448234UL, 2264934035UL,  744914583UL, 2586791259UL,
            1385380501UL,   66529922UL, 1819103258UL, 1899300332UL, 2098173828UL,
            1793831094UL,  276463159UL,  360132945UL, 4178212058UL,  595015228UL,
             177071838UL, 2800080290UL, 1573557746UL, 1548998935UL,  378454223UL,
            1460534296UL, 1116274283UL, 3112385063UL, 3709761796UL,  827999348UL,
            3580042847UL, 1913901014UL,  614021289UL, 4278528023UL, 1905177404UL,
              45407939UL, 3298183234UL, 1184848810UL, 3644926330UL, 3923635459UL,
            1627046213UL, 3677876759UL,  969772772UL, 1160524753UL, 1522441192UL,
             452369933UL, 1527502551UL,  832490847UL, 1003299676UL, 1071381111UL,
            2891255476UL,  973747308UL, 4086897108UL, 1847554542UL, 3895651598UL,
            2227820339UL, 1621250941UL, 2881344691UL, 3583565821UL, 3510404498UL,
             849362119UL,  862871471UL,  797858058UL, 2867774932UL, 2821282612UL,
            3272403146UL, 3997979905UL,  209178708UL, 1805135652UL,    6783381UL,
            2823361423UL,  792580494UL, 4263749770UL,  776439581UL, 3798193823UL,
            2853444094UL, 2729507474UL, 1071873341UL, 1329010206UL, 1289336450UL,
            3327680758UL, 2011491779UL,   80157208UL,  922428856UL, 1158943220UL,
            1667230961UL, 2461022820UL, 2608845159UL,  387516115UL, 3345351910UL,
            1495629111UL, 4098154157UL, 3156649613UL, 3525698599UL, 4134908037UL,
             446713264UL, 2137537399UL, 3617403512UL,  813966752UL, 1157943946UL,
            3734692965UL, 1680301658UL, 3180398473UL, 3509854711UL, 2228114612UL,
            1008102291UL,  486805123UL,  863791847UL, 3189125290UL, 1050308116UL,
            3777341526UL, 4291726501UL,  844061465UL, 1347461791UL, 2826481581UL,
             745465012UL, 2055805750UL, 4260209475UL, 2386693097UL, 2980646741UL,
             447229436UL, 2077782664UL, 1232942813UL, 4023002732UL, 1399011509UL,
            3140569849UL, 2579909222UL, 3794857471UL,  900758066UL, 2887199683UL,
            1720257997UL, 3367494931UL, 2668921229UL,  955539029UL, 3818726432UL,
            1105704962UL, 3889207255UL, 2277369307UL, 2746484505UL, 1761846513UL,
            2413916784UL, 2685127085UL, 4240257943UL, 1166726899UL, 4215215715UL,
            3082092067UL, 3960461946UL, 1663304043UL, 2087473241UL, 4162589986UL,
            2507310778UL, 1579665506UL,  767234210UL,  970676017UL,  492207530UL,
            1441679602UL, 1314785090UL, 3262202570UL, 3417091742UL, 1561989210UL,
            3011406780UL, 1146609202UL, 3262321040UL, 1374872171UL, 1634688712UL,
            1280458888UL, 2230023982UL,  419323804UL, 3262899800UL,   39783310UL,
            1641619040UL, 1700368658UL, 2207946628UL, 2571300939UL, 2424079766UL,
             780290914UL, 2715195096UL, 3390957695UL,  163151474UL, 2309534542UL,
            1860018424UL,  555755123UL,  280320104UL, 1604831083UL, 2713022383UL,
            1728987441UL, 3639955502UL,  623065489UL, 3828630947UL, 4275479050UL,
            3516347383UL, 2343951195UL, 2430677756UL,  635534992UL, 3868699749UL,
             808442435UL, 3070644069UL, 4282166003UL, 2093181383UL, 2023555632UL,
            1568662086UL, 3422372620UL, 4134522350UL, 3016979543UL, 3259320234UL,
            2888030729UL, 3185253876UL, 4258779643UL, 1267304371UL, 1022517473UL,
             815943045UL,  929020012UL, 2995251018UL, 3371283296UL, 3608029049UL,
            2018485115UL,  122123397UL, 2810669150UL, 1411365618UL, 1238391329UL,
            1186786476UL, 3155969091UL, 2242941310UL, 1765554882UL,  279121160UL,
            4279838515UL, 1641578514UL, 3796324015UL,   13351065UL,  103516986UL,
            1609694427UL,  551411743UL, 2493771609UL, 1316337047UL, 3932650856UL,
            4189700203UL,  463397996UL, 2937735066UL, 1855616529UL, 2626847990UL,
              55091862UL, 3823351211UL,  753448970UL, 4045045500UL, 1274127772UL,
            1124182256UL,   92039808UL, 2126345552UL,  425973257UL,  386287896UL,
            2589870191UL, 1987762798UL, 4084826973UL, 2172456685UL, 3366583455UL,
            3602966653UL, 2378803535UL, 2901764433UL, 3716929006UL, 3710159000UL,
            2653449155UL, 3469742630UL, 3096444476UL, 3932564653UL, 2595257433UL,
             318974657UL, 3146202484UL,  853571438UL,  144400272UL, 3768408841UL,
             782634401UL, 2161109003UL,  570039522UL, 1886241521UL,   14249488UL,
            2230804228UL, 1604941699UL, 3928713335UL, 3921942509UL, 2155806892UL,
             134366254UL,  430507376UL, 1924011722UL,  276713377UL,  196481886UL,
            3614810992UL, 1610021185UL, 1785757066UL,  851346168UL, 3761148643UL,
            2918835642UL, 3364422385UL, 3012284466UL, 3735958851UL, 2643153892UL,
            3778608231UL, 1164289832UL,  205853021UL, 2876112231UL, 3503398282UL,
            3078397001UL, 3472037921UL, 1748894853UL, 2740861475UL,  316056182UL,
            1660426908UL,  168885906UL,  956005527UL, 3984354789UL,  566521563UL,
            1001109523UL, 1216710575UL, 2952284757UL, 3834433081UL, 3842608301UL,
            2467352408UL, 3974441264UL, 3256601745UL, 1409353924UL, 1329904859UL,
            2307560293UL, 3125217879UL, 3622920184UL, 3832785684UL, 3882365951UL,
            2308537115UL, 2659155028UL, 1450441945UL, 3532257603UL, 3186324194UL,
            1225603425UL, 1124246549UL,  175808705UL, 3009142319UL, 2796710159UL,
            3651990107UL,  160762750UL, 1902254979UL, 1698648476UL, 1134980669UL,
             497144426UL, 3302689335UL, 4057485630UL, 3603530763UL, 4087252587UL,
             427812652UL,  286876201UL,  823134128UL, 1627554964UL, 3745564327UL,
            2589226092UL, 4202024494UL,   62878473UL, 3275585894UL, 3987124064UL,
            2791777159UL, 1916869511UL, 2585861905UL, 1375038919UL, 1403421920UL,
              60249114UL, 3811870450UL, 3021498009UL, 2612993202UL,  528933105UL,
            2757361321UL, 3341402964UL, 2621861700UL,  273128190UL, 4015252178UL,
            3094781002UL, 1621621288UL, 2337611177UL, 1796718448UL, 1258965619UL,
            4241913140UL, 2138560392UL, 3022190223UL, 4174180924UL,  450094611UL,
            3274724580UL,  617150026UL, 2704660665UL, 1469700689UL, 1341616587UL,
             356715071UL, 1188789960UL, 2278869135UL, 1766569160UL, 2795896635UL,
              57824704UL, 2893496380UL, 1235723989UL, 1630694347UL, 3927960522UL,
             428891364UL, 1814070806UL, 2287999787UL, 4125941184UL, 3968103889UL,
            3548724050UL, 1025597707UL, 1404281500UL, 2002212197UL,   92429143UL,
            2313943944UL, 2403086080UL, 3006180634UL, 3561981764UL, 1671860914UL,
            1768520622UL, 1803542985UL,  844848113UL, 3006139921UL, 1410888995UL,
            1157749833UL, 2125704913UL, 1789979528UL, 1799263423UL,  741157179UL,
            2405862309UL,  767040434UL, 2655241390UL, 3663420179UL, 2172009096UL,
            2511931187UL, 1680542666UL,  231857466UL, 1154981000UL,  157168255UL,
            1454112128UL, 3505872099UL, 1929775046UL, 2309422350UL, 2143329496UL,
            2960716902UL,  407610648UL, 2938108129UL, 2581749599UL,  538837155UL,
            2342628867UL,  430543915UL,  740188568UL, 1937713272UL, 3315215132UL,
            2085587024UL, 4030765687UL,  766054429UL, 3517641839UL,  689721775UL,
            1294158986UL, 1753287754UL, 4202601348UL, 1974852792UL,   33459103UL,
            3568087535UL, 3144677435UL, 1686130825UL, 4134943013UL, 3005738435UL,
            3599293386UL,  426570142UL,  754104406UL, 3660892564UL, 1964545167UL,
             829466833UL,  821587464UL, 1746693036UL, 1006492428UL, 1595312919UL,
            1256599985UL, 1024482560UL, 1897312280UL, 2902903201UL,  691790057UL,
            1037515867UL, 3176831208UL, 1968401055UL, 2173506824UL, 1089055278UL,
            1748401123UL, 2941380082UL,  968412354UL, 1818753861UL, 2973200866UL,
            3875951774UL, 1119354008UL, 3988604139UL, 1647155589UL, 2232450826UL,
            3486058011UL, 3655784043UL, 3759258462UL,  847163678UL, 1082052057UL,
             989516446UL, 2871541755UL, 3196311070UL, 3929963078UL,  658187585UL,
            3664944641UL, 2175149170UL, 2203709147UL, 2756014689UL, 2456473919UL,
            3890267390UL, 1293787864UL, 2830347984UL, 3059280931UL, 4158802520UL,
            1561677400UL, 2586570938UL,  783570352UL, 1355506163UL,   31495586UL,
            3789437343UL, 3340549429UL, 2092501630UL,  896419368UL,  671715824UL,
            3530450081UL, 3603554138UL, 1055991716UL, 3442308219UL, 1499434728UL,
            3130288473UL, 3639507000UL,   17769680UL, 2259741420UL,  487032199UL,
            4227143402UL, 3693771256UL, 1880482820UL, 3924810796UL,  381462353UL,
            4017855991UL, 2452034943UL, 2736680833UL, 2209866385UL, 2128986379UL,
             437874044UL,  595759426UL,  641721026UL, 1636065708UL, 3899136933UL,
             629879088UL, 3591174506UL,  351984326UL, 2638783544UL, 2348444281UL,
            2341604660UL, 2123933692UL,  143443325UL, 1525942256UL,  364660499UL,
             599149312UL,  939093251UL, 1523003209UL,  106601097UL,  376589484UL,
            1346282236UL, 1297387043UL,  764598052UL, 3741218111UL,  933457002UL,
            1886424424UL, 3219631016UL,  525405256UL, 3014235619UL,  323149677UL,
            2038881721UL, 4100129043UL, 2851715101UL, 2984028078UL, 1888574695UL,
            2014194741UL, 3515193880UL, 4180573530UL, 3461824363UL, 2641995497UL,
            3179230245UL, 2902294983UL, 2217320456UL, 4040852155UL, 1784656905UL,
            3311906931UL,   87498458UL, 2752971818UL, 2635474297UL, 2831215366UL,
            3682231106UL, 2920043893UL, 3772929704UL, 2816374944UL,  309949752UL,
            2383758854UL,  154870719UL,  385111597UL, 1191604312UL, 1840700563UL,
             872191186UL, 2925548701UL, 1310412747UL, 2102066999UL, 1504727249UL,
            3574298750UL, 1191230036UL, 3330575266UL, 3180292097UL, 3539347721UL,
             681369118UL, 3305125752UL, 3648233597UL,  950049240UL, 4173257693UL,
            1760124957UL,  512151405UL,  681175196UL,  580563018UL, 1169662867UL,
            4015033554UL, 2687781101UL,  699691603UL, 2673494188UL, 1137221356UL,
             123599888UL,  472658308UL, 1053598179UL, 1012713758UL, 3481064843UL,
            3759461013UL, 3981457956UL, 3830587662UL, 1877191791UL, 3650996736UL,
             988064871UL, 3515461600UL, 4089077232UL, 2225147448UL, 1249609188UL,
            2643151863UL, 3896204135UL, 2416995901UL, 1397735321UL, 3460025646UL
        };

        static const uint32 InitKey[] = { 0x123UL, 0x234UL, 0x345UL, 0x456UL };
        MersenneTwister rng(InitKey, countof(InitKey));

        for (size_t i = 0; i < 1000; ++i)
            EXPECT_EQ(Expected[i], rng.rand_uint32());
    }
}
