
//
// This source file is part of appleseed.
// Visit http://appleseedhq.net/ for additional information and resources.
//
// This software is released under the MIT license.
//
// Copyright (c) 2017 Luis Barrancos, The appleseedhq Organization
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

// Ref: $MAYA_LOCATION/docs/Nodes/wood.html

#include "appleseed/maya/as_maya_fractal_helpers.h"
#include "appleseed/maya/as_maya_helpers.h"
#include "appleseed/maya/as_maya_transform_helpers.h"

shader as_maya_wood
[[
    string as_maya_node_name = "wood"
]]
(
    color in_fillerColor = color(0.824, 0.627, 0.471)
    [[
        string as_maya_attribute_name = "fillerColor",
        string as_maya_attribute_short_name = "fc",
        string label = "Filler Color",
        string page = "Wood Attributes"
    ]],
    color in_veinColor = color(0.157, 0.078, 0.039)
    [[
        string as_maya_attribute_name = "veinColor",
        string as_maya_attribute_short_name = "vc",
        string label = "Vein Color",
        string page = "Wood Attributes"
    ]],
    float in_veinSpread = 0.25
    [[
        string as_maya_attribute_name = "veinSpread",
        string as_maya_attribute_short_name = "v",
        float min = 0.0,
        float softmax = 3.0,
        string label = "Vein Spread",
        string page = "Wood Attributes"
    ]],
    float in_layerSize = 0.05
    [[
        string as_maya_attribute_name = "layerSize",
        string as_maya_attribute_short_name = "ls",
        float min = 0.005,
        float softmax = 0.5,
        string label = "Layer Size",
        string page = "Wood Attributes"
    ]],
    float in_randomness = 0.5
    [[
        string as_maya_attribute_name = "randomness",
        string as_maya_attribute_short_name = "rd",
        float min = 0.0,
        float max = 1.0,
        string label = "Randomness",
        string page = "Wood Attributes"
    ]],
    float in_age = 20.0
    [[
        string as_maya_attribute_name = "age",
        string as_maya_attribute_short_name = "a",
        float min = 0.0,
        float softmax = 100.0,
        string label = "Age",
        string page = "Wood Attributes"
    ]],
    color in_grainColor = color(0.118, 0.039, 0.0)
    [[
        string as_maya_attribute_name = "grainColor",
        string as_maya_attribute_short_name = "gc",
        string label = "Grain Color",
        string page = "Wood Attributes"
    ]],
    float in_grainContrast = 0.5
    [[
        string as_maya_attribute_name = "grainContrast",
        string as_maya_attribute_short_name = "gx",
        float min = 0.0,
        float max = 1.0,
        string label = "Grain Contrast",
        string page = "Wood Attributes"
    ]],
    float in_grainSpacing = 0.01
    [[
        string as_maya_attribute_name = "grainSpacing",
        string as_maya_attribute_short_name = "gs",
        float min = 0.0,
        float softmin = 0.01,
        float softmax = 0.1,
        string label = "Grain Spacing",
        string page = "Wood Attributes"
    ]],
    float in_center[2] = {0.5, -0.5}
    [[
        string as_maya_attribute_name = "center",
        string as_maya_attribute_short_name = "c",
        float softmin = -1.0,
        float softmax = 1.0,
        string label = "Center",
        string page = "Wood Attributes"
    ]],
    float in_amplitudeX = 0.0
    [[
        string as_maya_attribute_name = "amplitudeX",
        string as_maya_attribute_short_name = "ax",
        float softmin = 0.0,
        float softmax = 1.0,
        string label = "Amplitude X",
        string page = "Noise Attributes"
    ]],
    float in_amplitudeY = 0.0
    [[
        string as_maya_attribute_name = "amplitudeY",
        string as_maya_attribute_short_name = "ay",
        float softmin = 0.0,
        float softmax = 1.0,
        string label = "Amplitude Y",
        string page = "Noise Attributes"
    ]],
    float in_ratio = 0.35
    [[
        string as_maya_attribute_name = "ratio",
        string as_maya_attribute_short_name = "ra",
        float min = 0.0,
        float max = 1.0,
        string label = "Ratio",
        string page = "Noise Attributes"
    ]],
    vector in_ripples = vector(1)
    [[
        string as_maya_attribute_name = "ripples",
        string as_maya_attribute_short_name = "r",
        string label = "Ripples",
        string page = "Noise Attributes"
    ]],
    float in_ripplesX = 1.0
    [[
        string as_maya_attribute_name = "ripplesX",
        string as_maya_attribute_short_name = "rx",
        string widget = "null"
    ]],
    float in_ripplesY = 1.0
    [[
        string as_maya_attribute_name = "ripplesY",
        string as_maya_attribute_short_name = "ry",
        string widget = "null"
    ]],
    float in_depth[2] = {0.0, 8.0}
    [[
        string as_maya_attribute_name = "depth",
        string as_maya_attribute_short_name = "d",
        float min = 0.0,
        float softmax = 8.0,
        string label = "Depth",
        string page = "Noise Attributes"
    ]],
    normal in_normalCamera = N
    [[
        string as_maya_attribute_name = "normalCamera",
        string as_maya_attribute_short_name = "n",
        string label = "Normal",
        string widget = "null"
    ]],
    point in_refPointCamera = P
    [[
        string as_maya_attribute_name = "refPointCamera",
        string as_maya_attribute_short_name = "rpc",
        string label = "Surface Point",
        string widget = "null"
    ]],
    matrix in_placementMatrix = matrix(1)
    [[
        string as_maya_attribute_name = "placementMatrix",
        string label = "Placement Matrix",
        string widget = "null"
    ]],

    MAYA_COLORBALANCE_PARAMETERS,
    MAYA_EFFECTS_PARAMETERS,
    MAYA_EFFECTS_3DTEX_PARAMETERS,

    output color out_outColor = color(0)
    [[
        string as_maya_attribute_name = "outColor",
        string as_maya_attribute_short_name = "oc",
        string label = "Output Color",
        string widget = "null"
    ]],
    output float out_outAlpha = 1.0
    [[
        string as_maya_attribute_name = "outAlpha",
        string as_maya_attribute_short_name = "oa",
        string label = "Output Alpha",
        string widget = "null"
    ]],
    output normal out_outNormal = N
    [[
        string as_maya_attribute_name = "outNormal",
        string as_maya_attribute_short_name = "o",
        string label = "Output Normal",
        string widget = "null"
    ]]
)
{
    matrix placement = (in_local)
        ? matrix("common", "object") * in_placementMatrix
        : in_placementMatrix;

    point Pp = transform(placement, in_refPointCamera);

    float box_blending = 0.0;

    int outside_box = outside_place3d_volume(
        Pp,
        in_wrap,
        in_blend,
        box_blending);

    if (outside_box)
    {
        out_outColor = in_defaultColor;
        out_outAlpha = maya_luminance(out_outColor);
        out_outNormal = in_normalCamera;

        return;
    }
    else
    {
        float filter_width = 0.0;

        if (in_filter > 0.0)
        {
            filter_width = in_filter * max(EPS, sqrt(area(Pp)));
            filter_width += in_filterOffset;
        }

        float value = recurrence(filter_width, Pp, in_shaker, 0.0);
        value = value * 0.25 + 0.5;

        out_outAlpha = value;
        out_outColor = mix(in_channel2, in_channel1, min(1.0, sqr(value)));

        // Normal output.
        float melt = 0.1 * in_normMelt;
        
        out_outNormal = recurrence3(filter_width, Pp, in_normDepth, melt);

        if (!in_wrap && in_blend)
        {
            out_outColor = mix(in_defaultColor, out_outColor, box_blending);
            out_outAlpha *= box_blending;
            out_outNormal *= box_blending;
        }
        out_outNormal = normalize(out_outNormal + in_normalCamera);

        maya_colorBalance(
            in_colorGain,
            in_colorOffset,
            in_defaultColor,
            in_alphaGain,
            in_alphaOffset,
            in_invert,
            in_alphaIsLuminance,
            out_outColor,
            out_outAlpha
            );
    }
}
