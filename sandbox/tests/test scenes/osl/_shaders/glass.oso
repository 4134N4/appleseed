OpenShadingLanguage 1.00
# Compiled by oslc 1.5.7dev
surface glass
param	float	ior	1.5 		 %read{2,6} %write{2147483647,-1}
global	normal	N	 %read{6,8} %write{2147483647,-1}
global	closure color	Ci	 %read{2147483647,-1} %write{9,9}
local	float	from_ior	 %read{7,7} %write{2,4}
local	float	to_ior	 %read{7,7} %write{3,5}
temp	int	$tmp1	 %read{1,1} %write{0,0}
const	float	$const1	1		 %read{3,4} %write{2147483647,-1}
temp	closure color	$tmp2	 %read{9,9} %write{6,6}
const	string	$const2	"reflection"		 %read{6,6} %write{2147483647,-1}
temp	closure color	$tmp3	 %read{9,9} %write{8,8}
temp	float	$tmp4	 %read{8,8} %write{7,7}
const	string	$const3	"refraction"		 %read{8,8} %write{2147483647,-1}
code ___main___
# glass.osl:6
# 	if (backfacing())
	backfacing	$tmp1 	%filename{"glass.osl"} %line{6} %argrw{"w"}
	if		$tmp1 4 6 	%argrw{"r"}
# glass.osl:8
# 		from_ior = ior;
	assign		from_ior ior 	%line{8} %argrw{"wr"}
# glass.osl:9
# 		to_ior = 1.0;
	assign		to_ior $const1 	%line{9} %argrw{"wr"}
# glass.osl:13
# 		from_ior = 1.0;
	assign		from_ior $const1 	%line{13} %argrw{"wr"}
# glass.osl:14
# 		to_ior = ior;
	assign		to_ior ior 	%line{14} %argrw{"wr"}
# glass.osl:17
#  	Ci = reflection(N, ior) + refraction(N, from_ior / to_ior);
	closure		$tmp2 $const2 N ior 	%line{17} %argrw{"wrrr"}
	div		$tmp4 from_ior to_ior 	%argrw{"wrr"}
	closure		$tmp3 $const3 N $tmp4 	%argrw{"wrrr"}
	add		Ci $tmp2 $tmp3 	%argrw{"wrr"}
	end
